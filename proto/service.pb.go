// Code generated by protoc-gen-go.
// source: proto/service.proto
// DO NOT EDIT!

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	proto/service.proto

It has these top-level messages:
	ResourceRequest
	ResourceReservation
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ResourceRequest struct {
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *ResourceRequest) Reset()                    { *m = ResourceRequest{} }
func (m *ResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*ResourceRequest) ProtoMessage()               {}
func (*ResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResourceReservation struct {
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *ResourceReservation) Reset()                    { *m = ResourceReservation{} }
func (m *ResourceReservation) String() string            { return proto.CompactTextString(m) }
func (*ResourceReservation) ProtoMessage()               {}
func (*ResourceReservation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*ResourceRequest)(nil), "service.ResourceRequest")
	proto.RegisterType((*ResourceReservation)(nil), "service.ResourceReservation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for ResourceManager service

type ResourceManagerClient interface {
	Reserve(ctx context.Context, in *ResourceRequest, opts ...grpc.CallOption) (*ResourceReservation, error)
}

type resourceManagerClient struct {
	cc *grpc.ClientConn
}

func NewResourceManagerClient(cc *grpc.ClientConn) ResourceManagerClient {
	return &resourceManagerClient{cc}
}

func (c *resourceManagerClient) Reserve(ctx context.Context, in *ResourceRequest, opts ...grpc.CallOption) (*ResourceReservation, error) {
	out := new(ResourceReservation)
	err := grpc.Invoke(ctx, "/service.ResourceManager/Reserve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ResourceManager service

type ResourceManagerServer interface {
	Reserve(context.Context, *ResourceRequest) (*ResourceReservation, error)
}

func RegisterResourceManagerServer(s *grpc.Server, srv ResourceManagerServer) {
	s.RegisterService(&_ResourceManager_serviceDesc, srv)
}

func _ResourceManager_Reserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ResourceManagerServer).Reserve(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _ResourceManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.ResourceManager",
	HandlerType: (*ResourceManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reserve",
			Handler:    _ResourceManager_Reserve_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x03, 0xf3, 0x84, 0xd8, 0xa1, 0x5c,
	0x25, 0x65, 0x2e, 0xfe, 0xa0, 0xd4, 0xe2, 0xfc, 0xd2, 0xa2, 0xe4, 0xd4, 0xa0, 0xd4, 0xc2, 0xd2,
	0xd4, 0xe2, 0x12, 0x21, 0x01, 0x2e, 0xe6, 0xd2, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x10, 0x53, 0x49, 0x9d, 0x4b, 0x18, 0xa1, 0x08, 0xa4, 0x33, 0xb1, 0x24, 0x33, 0x3f, 0x0f,
	0x53, 0xa1, 0x51, 0x18, 0xc2, 0x34, 0xdf, 0xc4, 0xbc, 0xc4, 0xf4, 0xd4, 0x22, 0x21, 0x67, 0x2e,
	0x76, 0x88, 0x9e, 0x54, 0x21, 0x09, 0x3d, 0x98, 0x23, 0xd0, 0xac, 0x94, 0x92, 0xc1, 0x22, 0x03,
	0xb7, 0x47, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x6a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99,
	0x20, 0x7a, 0xae, 0xcc, 0x00, 0x00, 0x00,
}
